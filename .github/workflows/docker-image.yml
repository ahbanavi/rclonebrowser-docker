name: Docker Image CI

on:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest rclone version
        id: rclone_version
        run: |
          VERSION=$(curl -s https://api.github.com/repos/rclone/rclone/releases/latest | jq -r .tag_name)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          # Check if this version already exists in our repository
          if docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${VERSION} >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Log in to the Container registry
        if: steps.rclone_version.outputs.exists == 'false'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        if: steps.rclone_version.outputs.exists == 'false'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.rclone_version.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        if: steps.rclone_version.outputs.exists == 'false'
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.rclone_version.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ steps.rclone_version.outputs.version }}
          platforms: linux/arm64

      - name: Generate artifact attestation
        if: steps.rclone_version.outputs.exists == 'false'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
